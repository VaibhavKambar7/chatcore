name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "23.11.0"

      - name: Install dependencies
        run: npm install

      - name: Build project
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY }}
          PINECONE_ENVIRONMENT: ${{ secrets.PINECONE_ENVIRONMENT }}
          PINECONE_INDEX_NAME: ${{ secrets.PINECONE_INDEX_NAME }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_BUCKET_REGION: ${{ secrets.AWS_BUCKET_REGION }}
          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
          AWS_SDK_LOAD_CONFIG: ${{ secrets.AWS_SDK_LOAD_CONFIG }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DIRECT_URL: ${{ secrets.DIRECT_URL }}
          LLAMA_CLOUD_API_KEY: ${{ secrets.LLAMA_CLOUD_API_KEY }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
        run: npm run build

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts

      - name: Clean up old deployment and free space
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.USERNAME }}@${{ secrets.HOST }} << 'EOF'
            # Stop PM2 processes
            pm2 stop all || true
            
            # Clean up space
            sudo apt clean
            sudo apt autoremove -y
            npm cache clean --force || true
            rm -rf ~/.npm/_logs/* || true
            pm2 flush || true
            
            # Remove old build
            rm -rf ~/app/.next/* || true
            
            # Check disk space
            df -h
          EOF

      - name: Rsync built files and config to EC2
        run: |
          rsync -avz -e "ssh -i ~/.ssh/id_rsa" --exclude='cache' --exclude='*.map' ./.next/ ${{ secrets.USERNAME }}@${{ secrets.HOST }}:~/app/.next/
          rsync -avz -e "ssh -i ~/.ssh/id_rsa" package.json package-lock.json ecosystem.config.js ${{ secrets.USERNAME }}@${{ secrets.HOST }}:~/app/

      - name: Install system dependencies for 'sharp' on EC2
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.USERNAME }}@${{ secrets.HOST }} << 'EOF'
            sudo apt-get update
            sudo apt-get install -y libvips-dev || true
          EOF

      - name: Install production dependencies, generate Prisma client, and restart with PM2
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.USERNAME }}@${{ secrets.HOST }} << 'EOF'
            cd ~/app
            
            # Install only production dependencies
            npm ci --omit=dev --ignore-scripts
            
            # Install sharp for the correct platform
            npm install --platform=linux --arch=x64 sharp
            
            # Generate Prisma client
            npx prisma generate
            
            # Set environment variables and start PM2
            export GEMINI_API_KEY="${{ secrets.GEMINI_API_KEY }}"
            export PINECONE_API_KEY="${{ secrets.PINECONE_API_KEY }}"
            export PINECONE_ENVIRONMENT="${{ secrets.PINECONE_ENVIRONMENT }}"
            export PINECONE_INDEX_NAME="${{ secrets.PINECONE_INDEX_NAME }}"
            export AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}"
            export AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}"
            export AWS_BUCKET_REGION="${{ secrets.AWS_BUCKET_REGION }}"
            export BUCKET_NAME="${{ secrets.BUCKET_NAME }}"
            export AWS_SDK_LOAD_CONFIG="${{ secrets.AWS_SDK_LOAD_CONFIG }}"
            export DATABASE_URL="${{ secrets.DATABASE_URL }}"
            export DIRECT_URL="${{ secrets.DIRECT_URL }}"
            export LLAMA_CLOUD_API_KEY="${{ secrets.LLAMA_CLOUD_API_KEY }}"
            export GOOGLE_CLIENT_SECRET="${{ secrets.GOOGLE_CLIENT_SECRET }}"
            export GOOGLE_CLIENT_ID="${{ secrets.GOOGLE_CLIENT_ID }}"
            export NEXTAUTH_SECRET="${{ secrets.NEXTAUTH_SECRET }}"
            export NEXTAUTH_URL="${{ secrets.NEXTAUTH_URL }}"
            export STRIPE_SECRET_KEY="${{ secrets.STRIPE_SECRET_KEY }}"
            
            pm2 restart ecosystem.config.js --env production || pm2 start ecosystem.config.js --env production
            
            # Show final disk usage
            df -h
          EOF
